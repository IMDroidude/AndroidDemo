version: 2
jobs:

  accept_library_licenses: # testing license
    docker:
      - image: circleci/android:api-28 #android:api-28-alpha #android:api-28 #
    environment:
      JVM_OPTS: -Xmx4G
    steps:
      - checkout
      - run: yes | sdkmanager --licenses && yes | sdkmanager --update
      #- run: cp -r licenses/. $ANDROID_HOME/licenses
      #- run: yes | sudo ~/Library/Android/sdk/tools/bin/sdkmanager --licenses
      #- run: yes | ./sdkmanager "platforms;android-28"



#  build:  # build creation and dependencies testing
#      working_directory: ~/code
#      docker:
#        - image: circleci/android:api-28
#      environment:
#        JVM_OPTS: -Xmx3200m
#      steps:
#        - checkout
#        - restore_cache:
#            key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
#        - run:
#            name: Download Dependencies
#            command: ./gradlew androidDependencies
#        - save_cache:
#            paths:
#              - ~/.gradle
#            key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}



  build:
    working_directory: ~/src
    docker:
      - image: circleci/android:api-28 #android:api-28 #android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx4G
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
            name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
            command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - run: echo $ENCODED_KEYSTORE | base64 --decode >> ${HOME}/yourprivatekey.jks
      - run: echo ‘export KEYSTORE=${HOME}/yourprivatekey.jks’ >> $BASH_ENV
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Initial build
          command: ./gradlew clean assembleRelease --no-daemon --stacktrace

      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks/





      #- run:
          #name: Run Tests
          #command: ./gradlew lint tess

#      - run:
#          name: Initial build
#          command: ./gradlew clean assembleRelease --no-daemon --stacktrace
#      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
#          path: app/build/reports
#          destination: reports
#      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
#          path: app/build/test-results # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples